version: '3.8'

volumes:
  n8n_data:
    driver: nfs
    driver_opts:
      share: "{{ DK_N8N_NFS_HOST }}:{{ DK_N8N_NFS_PATH }}/n8n_data"
  n8n_files:
    driver: nfs
    driver_opts:
      share: "{{ DK_N8N_NFS_HOST }}:{{ DK_N8N_NFS_PATH }}/n8n_files"
  pg_data:
    driver: nfs
    driver_opts:
      share: "{{ DK_N8N_NFS_HOST }}:{{ DK_N8N_NFS_PATH }}/pg_data"
  redis_data:
    driver: nfs
    driver_opts:
      share: "{{ DK_N8N_NFS_HOST }}:{{ DK_N8N_NFS_PATH }}/redis_data"

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD={{ DK_N8N_POSTGRES_PASSWORD }}
      - TZ=America/Sao_Paulo
      - LANG=pt_BR.utf8
      - POSTGRES_INITDB_ARGS=--locale-provider=icu --icu-locale=pt-BR
    volumes:
      - pg_data:/var/lib/postgresql/data
    deploy:
      placement:
        constraints:
          - node.hostname == mustang
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "test ! -f \"$PGDATA/PG_VERSION\" && exit 0 || pg_isready -h 127.0.0.1 -p 5432 -U n8n -d n8n || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 300s

  adminer:
    image: adminer
    ports:
      - "8032:8080"
    deploy:
      placement:
        constraints:
          - node.hostname == mustang
      restart_policy:
        condition: on-failure

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    # Para proteger o Redis com senha, defina a command abaixo e exporte a mesma senha nos servi√ßos n8n
    # command: ["redis-server", "--appendonly", "yes", "--requirepass", "change_me_redis_P@sS"]
    volumes:
      - redis_data:/data
    deploy:
      placement:
        constraints:
          - node.hostname == mustang
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 300s

  n8n-web:
    image: "${DK_REPO_DI_HOST}:5000/grdk-n8n:latest"
    depends_on:
      - postgres
      - redis
    environment:
      - TZ=America/Sao_Paulo
      - GENERIC_TIMEZONE=America/Sao_Paulo

      - N8N_HOST={{ DK_N8N_HOST }}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_EDITOR_BASE_URL=https://{{ DK_N8N_HOST }}/
      - N8N_PUBLIC_API_BASE_URL=https://{{ DK_N8N_HOST }}/
      - WEBHOOK_URL=https://webhook.{{ DK_N8N_HOST }}/

      # - N8N_SECURE_COOKIE=true
      - N8N_PROXY_HOPS=1
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_ENCRYPTION_KEY={{ DK_N8N_ENCRYPTION_KEY }}
      - N8N_RUNNERS_ENABLED=true
      - N8N_RUNNERS_MODE=internal
      - QUEUE_BULL_PREFIX=bull
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=true

      # Modo UI
      - N8N_DISABLE_PRODUCTION_MAIN_PROCESS=true

      # Banco (Postgres)
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD={{ DK_N8N_POSTGRES_PASSWORD }}

      # Fila (Redis)
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=0
      # - QUEUE_BULL_REDIS_PASSWORD=change_me_redis_P@sS

      # Packages
      - N8N_COMMUNITY_PACKAGES_ENABLED=true
      - N8N_COMMUNITY_PACKAGES_PREVENT_LOADING=false
      - N8N_REINSTALL_MISSING_PACKAGES=true
      - N8N_VERIFIED_PACKAGES_ENABLED=false
      - N8N_UNVERIFIED_PACKAGES_ENABLED=false

    volumes:
      - n8n_data:/home/node/.n8n
      - n8n_files:/files
    ports:
      - "5678:5678"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == mustang
      restart_policy:
        condition: on-failure

  n8n-webhook:
    image: "${DK_REPO_DI_HOST}:5000/grdk-n8n:latest"
    command: ["webhook"]
    depends_on:
      - postgres
      - redis
    environment:
      - TZ=America/Sao_Paulo
      - GENERIC_TIMEZONE=America/Sao_Paulo

      - N8N_HOST=webhook.{{ DK_N8N_HOST }}
      - N8N_PORT=5679
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://webhook.{{ DK_N8N_HOST }}/

      - N8N_PROXY_HOPS=1
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_ENCRYPTION_KEY={{ DK_N8N_ENCRYPTION_KEY }}
      - N8N_RUNNERS_ENABLED=true
      - N8N_RUNNERS_MODE=internal
      - QUEUE_BULL_PREFIX=bull
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=true

      # Modo Webhook
      - N8N_RUN_WEBHOOK=true
      - N8N_DISABLE_PRODUCTION_MAIN_PROCESS=true

      # Banco (Postgres)
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD={{ DK_N8N_POSTGRES_PASSWORD }}

      # Fila (Redis)
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=0
      # - QUEUE_BULL_REDIS_PASSWORD=change_me_redis_P@sS

      # Packages
      - N8N_COMMUNITY_PACKAGES_ENABLED=true
      - N8N_COMMUNITY_PACKAGES_PREVENT_LOADING=false
      - N8N_REINSTALL_MISSING_PACKAGES=true
      - N8N_VERIFIED_PACKAGES_ENABLED=false
      - N8N_UNVERIFIED_PACKAGES_ENABLED=false

    ports:
      - "5679:5679"
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.hostname == mustang
      restart_policy:
        condition: on-failure

  n8n-worker:
    image: "${DK_REPO_DI_HOST}:5000/grdk-n8n:latest"
    command: ["worker", "--concurrency=5"]
    depends_on:
      - postgres
      - redis
    environment:
      - TZ=America/Sao_Paulo
      - GENERIC_TIMEZONE=America/Sao_Paulo

      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_ENCRYPTION_KEY={{ DK_N8N_ENCRYPTION_KEY }}
      - N8N_RUNNERS_ENABLED=true
      - N8N_RUNNERS_MODE=internal
      - QUEUE_BULL_PREFIX=bull
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=true

      # Modo Worker
      - N8N_RUN_WORKER=true

      # Banco (Postgres)
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD={{ DK_N8N_POSTGRES_PASSWORD }}

      # Fila (Redis)
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=0
      # - QUEUE_BULL_REDIS_PASSWORD=change_me_redis_P@sS

      # Packages
      - N8N_COMMUNITY_PACKAGES_ENABLED=true
      - N8N_COMMUNITY_PACKAGES_PREVENT_LOADING=false
      - N8N_REINSTALL_MISSING_PACKAGES=true
      - N8N_VERIFIED_PACKAGES_ENABLED=false
      - N8N_UNVERIFIED_PACKAGES_ENABLED=false

    deploy:
      replicas: 2
      placement:
        constraints:
          - node.hostname == mustang
      restart_policy:
        condition: on-failure
